#![declare_crate(test)]

fn main() {
    print_number(gcd(4,    12 )); // 4
    print_number(gcd(7,    13 )); // 1
    print_number(gcd(15,   77 )); // 1
    print_number(gcd(1071, 462)); // 21
}

fn gcd(a: i32, b: i32) -> i32 {
    let mut a = a;
    let mut b = b;

    loop {
        if a > b {
            a = a - b;
        } else if b > a {
            b = b - a;
        } else {
            break a;
        }
    }
}

fn print_number(number: i32) {
    let num_digits = num_digits(number);
    let mut digit  = num_digits - 1;

    loop {
        let mut num = number;

        let mut i = 0;
        loop {
            if(i >= digit) {
                break;
            }

            num = num / 10;
            i = i + 1;
        }

        num = num - num / 10 * 10;
        std::print(digit_string(num));

        if(digit > 0) {
            digit = digit - 1;
        } else {
            break;
        }
    }

    std::print("\n");
}

fn digit_string(d: i32) -> str {
    if(d == 0) {"0"}
    else if(d == 1) {"1"}
    else if(d == 2) {"2"}
    else if(d == 3) {"3"}
    else if(d == 4) {"4"}
    else if(d == 5) {"5"}
    else if(d == 6) {"6"}
    else if(d == 7) {"7"}
    else if(d == 8) {"8"}
    else if(d == 9) {"9"}
    else            {"?"}
}

fn num_digits(number: i32) -> i32 {
    let mut number = number;
    let mut digits = 1;

    loop {
        number = number / 10;

        if number == 0 {
            break digits;
        } else {
            digits = digits + 1;
        }
    }
}
